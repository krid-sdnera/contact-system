/* tslint:disable */
/* eslint-disable */
/**
 * Contact System API
 * This is the spec for the Constact system API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dirk@arends.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserData,
    UserDataFromJSON,
    UserDataFromJSONTyped,
    UserDataToJSON,
} from './';

/**
 * 
 * @export
 * @interface AuditData
 */
export interface AuditData {
    /**
     * 
     * @type {number}
     * @memberof AuditData
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof AuditData
     */
    entityType: string;
    /**
     * 
     * @type {string}
     * @memberof AuditData
     */
    entityId: string;
    /**
     * 
     * @type {string}
     * @memberof AuditData
     */
    createdAt: string;
    /**
     * 
     * @type {UserData}
     * @memberof AuditData
     */
    user?: UserData;
    /**
     * 
     * @type {string}
     * @memberof AuditData
     */
    action: string;
    /**
     * 
     * @type {string}
     * @memberof AuditData
     */
    requestRoute?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AuditData
     */
    ipAddress?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AuditData
     */
    eventData: string;
}

export function AuditDataFromJSON(json: any): AuditData {
    return AuditDataFromJSONTyped(json, false);
}

export function AuditDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'entityType': json['entityType'],
        'entityId': json['entityId'],
        'createdAt': json['createdAt'],
        'user': !exists(json, 'user') ? undefined : UserDataFromJSON(json['user']),
        'action': json['action'],
        'requestRoute': !exists(json, 'requestRoute') ? undefined : json['requestRoute'],
        'ipAddress': !exists(json, 'ipAddress') ? undefined : json['ipAddress'],
        'eventData': json['eventData'],
    };
}

export function AuditDataToJSON(value?: AuditData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'entityType': value.entityType,
        'entityId': value.entityId,
        'createdAt': value.createdAt,
        'user': UserDataToJSON(value.user),
        'action': value.action,
        'requestRoute': value.requestRoute,
        'ipAddress': value.ipAddress,
        'eventData': value.eventData,
    };
}


