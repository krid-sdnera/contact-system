/* tslint:disable */
/* eslint-disable */
/**
 * Contact System API
 * This is the spec for the Constact system API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dirk@arends.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressData,
    AddressDataFromJSON,
    AddressDataFromJSONTyped,
    AddressDataToJSON,
    ContactOverrideData,
    ContactOverrideDataFromJSON,
    ContactOverrideDataFromJSONTyped,
    ContactOverrideDataToJSON,
} from './';

/**
 * 
 * @export
 * @interface ContactData
 */
export interface ContactData {
    /**
     * 
     * @type {number}
     * @memberof ContactData
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    state: ContactDataStateEnum;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    managementState: ContactDataManagementStateEnum;
    /**
     * 
     * @type {number}
     * @memberof ContactData
     */
    memberId: number;
    /**
     * 
     * @type {number}
     * @memberof ContactData
     */
    parentId?: number;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    firstname: string;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    lastname: string;
    /**
     * 
     * @type {AddressData}
     * @memberof ContactData
     */
    address?: AddressData;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    phoneHome?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    phoneMobile?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    phoneWork?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    relationship?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ContactData
     */
    primaryContact?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    occupation?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactData
     */
    expiry?: string;
    /**
     * 
     * @type {ContactOverrideData}
     * @memberof ContactData
     */
    overrides?: ContactOverrideData;
}

/**
* @export
* @enum {string}
*/
export enum ContactDataStateEnum {
    Enabled = 'enabled',
    Disabled = 'disabled'
}/**
* @export
* @enum {string}
*/
export enum ContactDataManagementStateEnum {
    Managed = 'managed',
    Unmanaged = 'unmanaged'
}

export function ContactDataFromJSON(json: any): ContactData {
    return ContactDataFromJSONTyped(json, false);
}

export function ContactDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'state': json['state'],
        'managementState': json['managementState'],
        'memberId': json['memberId'],
        'parentId': !exists(json, 'parentId') ? undefined : json['parentId'],
        'firstname': json['firstname'],
        'nickname': !exists(json, 'nickname') ? undefined : json['nickname'],
        'lastname': json['lastname'],
        'address': !exists(json, 'address') ? undefined : AddressDataFromJSON(json['address']),
        'phoneHome': !exists(json, 'phoneHome') ? undefined : json['phoneHome'],
        'phoneMobile': !exists(json, 'phoneMobile') ? undefined : json['phoneMobile'],
        'phoneWork': !exists(json, 'phoneWork') ? undefined : json['phoneWork'],
        'relationship': !exists(json, 'relationship') ? undefined : json['relationship'],
        'primaryContact': !exists(json, 'primaryContact') ? undefined : json['primaryContact'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'occupation': !exists(json, 'occupation') ? undefined : json['occupation'],
        'expiry': !exists(json, 'expiry') ? undefined : json['expiry'],
        'overrides': !exists(json, 'overrides') ? undefined : ContactOverrideDataFromJSON(json['overrides']),
    };
}

export function ContactDataToJSON(value?: ContactData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'state': value.state,
        'managementState': value.managementState,
        'memberId': value.memberId,
        'parentId': value.parentId,
        'firstname': value.firstname,
        'nickname': value.nickname,
        'lastname': value.lastname,
        'address': AddressDataToJSON(value.address),
        'phoneHome': value.phoneHome,
        'phoneMobile': value.phoneMobile,
        'phoneWork': value.phoneWork,
        'relationship': value.relationship,
        'primaryContact': value.primaryContact,
        'email': value.email,
        'occupation': value.occupation,
        'expiry': value.expiry,
        'overrides': ContactOverrideDataToJSON(value.overrides),
    };
}


