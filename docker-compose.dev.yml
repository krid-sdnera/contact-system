services:
  api:
    build:
      context: .
      dockerfile: api.Dockerfile

    ports:
      - 9999:80
    environment:
      - DB_HOST=mysql
      - DB_NAME=contactsystem
      - DB_USER=contactsystem
      - DB_PASS=contactsystem
    depends_on:
      - mysql
    develop:
      watch:
        - action: sync
          path: ./api
          target: /app
          ignore:
            - vendor

  ui:
    build:
      context: .
      dockerfile: ui.Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - api
    command: npm run dev --host
    develop:
      watch:
        - action: sync
          path: ./ui
          target: /home/node/app
          ignore:
            - node_modules

  mysql:
    image: mariadb
    restart: always
    user: root
    volumes:
      - mysqldata:/var/lib/mysql
    environment:
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=true
      - MARIADB_PASSWORD=contactsystem
      - MARIADB_USER=contactsystem
      - MARIADB_DATABASE=contactsystem
    expose:
      - 3306
    healthcheck:
      test:
        [
          "CMD",
          "/usr/local/bin/healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    restart: always
    depends_on:
      - mysql
    ports:
      - 9080:8080

  # postgres:
  #   image: postgres:14-alpine
  #   restart: unless-stopped
  #   networks:
  #     - lora
  #   volumes:
  #     - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
  #     - postgresqldata:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_PASSWORD=root

volumes:
  mysqldata:
  # postgresqldata:
