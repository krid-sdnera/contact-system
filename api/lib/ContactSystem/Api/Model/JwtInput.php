<?php
/**
 * JwtInput
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Contact System API
 *
 * This is the spec for the Constact system API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dirk@arends.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the JwtInput model.
 *
 * User credentials
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class JwtInput 
{
        /**
     * Your username
     *
     * @var string
     * @SerializedName("username")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $username;

    /**
     * Your password
     *
     * @var string
     * @SerializedName("password")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $password;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->username = isset($data['username']) ? $data['username'] : null;
        $this->password = isset($data['password']) ? $data['password'] : null;
    }

    /**
     * Gets username.
     *
     * @return string
     */
    public function getUsername(): string
    {
        return $this->username;
    }

    /**
     * Sets username.
     *
     * @param string $username  Your username
     *
     * @return $this
     */
    public function setUsername(string $username): string
    {
        $this->username = $username;

        return $this;
    }

    /**
     * Gets password.
     *
     * @return string
     */
    public function getPassword(): string
    {
        return $this->password;
    }

    /**
     * Sets password.
     *
     * @param string $password  Your password
     *
     * @return $this
     */
    public function setPassword(string $password): string
    {
        $this->password = $password;

        return $this;
    }
}


