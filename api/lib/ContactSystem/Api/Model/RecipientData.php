<?php
/**
 * RecipientData
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Contact System API
 *
 * This is the spec for the Constact system API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dirk@arends.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the RecipientData model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class RecipientData 
{
        /**
     * @var string
     * @SerializedName("rowId")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $rowId;

    /**
     * @var int
     * @SerializedName("id")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $id;

    /**
     * @var string
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $name;

    /**
     * @var string
     * @SerializedName("type")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $type;

    /**
     * @var string
     * @SerializedName("address")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $address;

    /**
     * @var int
     * @SerializedName("listId")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $listId;

    /**
     * @var string
     * @SerializedName("listName")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $listName;

    /**
     * @var string
     * @SerializedName("listAddress")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $listAddress;

    /**
     * @var string[]
     * @SerializedName("contributingRuleIds")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $contributingRuleIds;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->rowId = isset($data['rowId']) ? $data['rowId'] : null;
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->type = isset($data['type']) ? $data['type'] : null;
        $this->address = isset($data['address']) ? $data['address'] : null;
        $this->listId = isset($data['listId']) ? $data['listId'] : null;
        $this->listName = isset($data['listName']) ? $data['listName'] : null;
        $this->listAddress = isset($data['listAddress']) ? $data['listAddress'] : null;
        $this->contributingRuleIds = isset($data['contributingRuleIds']) ? $data['contributingRuleIds'] : null;
    }

    /**
     * Gets rowId.
     *
     * @return string
     */
    public function getRowId(): string
    {
        return $this->rowId;
    }

    /**
     * Sets rowId.
     *
     * @param string $rowId
     *
     * @return $this
     */
    public function setRowId(string $rowId): string
    {
        $this->rowId = $rowId;

        return $this;
    }

    /**
     * Gets id.
     *
     * @return int
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param int $id
     *
     * @return $this
     */
    public function setId(int $id): int
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string $name
     *
     * @return $this
     */
    public function setName(string $name): string
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets type.
     *
     * @return string
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * Sets type.
     *
     * @param string $type
     *
     * @return $this
     */
    public function setType(string $type): string
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Gets address.
     *
     * @return string
     */
    public function getAddress(): string
    {
        return $this->address;
    }

    /**
     * Sets address.
     *
     * @param string $address
     *
     * @return $this
     */
    public function setAddress(string $address): string
    {
        $this->address = $address;

        return $this;
    }

    /**
     * Gets listId.
     *
     * @return int
     */
    public function getListId(): int
    {
        return $this->listId;
    }

    /**
     * Sets listId.
     *
     * @param int $listId
     *
     * @return $this
     */
    public function setListId(int $listId): int
    {
        $this->listId = $listId;

        return $this;
    }

    /**
     * Gets listName.
     *
     * @return string
     */
    public function getListName(): string
    {
        return $this->listName;
    }

    /**
     * Sets listName.
     *
     * @param string $listName
     *
     * @return $this
     */
    public function setListName(string $listName): string
    {
        $this->listName = $listName;

        return $this;
    }

    /**
     * Gets listAddress.
     *
     * @return string
     */
    public function getListAddress(): string
    {
        return $this->listAddress;
    }

    /**
     * Sets listAddress.
     *
     * @param string $listAddress
     *
     * @return $this
     */
    public function setListAddress(string $listAddress): string
    {
        $this->listAddress = $listAddress;

        return $this;
    }

    /**
     * Gets contributingRuleIds.
     *
     * @return string[]
     */
    public function getContributingRuleIds(): array
    {
        return $this->contributingRuleIds;
    }

    /**
     * Sets contributingRuleIds.
     *
     * @param string[] $contributingRuleIds
     *
     * @return $this
     */
    public function setContributingRuleIds(array $contributingRuleIds): array
    {
        $this->contributingRuleIds = $contributingRuleIds;

        return $this;
    }
}


