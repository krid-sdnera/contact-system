<?php
/**
 * SectionsApiInterface
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Contact System API
 *
 * This is the spec for the Constact system API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dirk@arends.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\ApiResponse;
use OpenAPI\Server\Model\ListRules;
use OpenAPI\Server\Model\Members;
use OpenAPI\Server\Model\Roles;
use OpenAPI\Server\Model\SectionInput;
use OpenAPI\Server\Model\SectionResponse;
use OpenAPI\Server\Model\Sections;

/**
 * SectionsApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface SectionsApiInterface
{

    /**
     * Sets authentication method contact_auth
     *
     * @param string $value Value of the contact_auth authentication method.
     *
     * @return void
     */
    public function setcontact_auth($value);

    /**
     * Sets authentication method jwt_auth
     *
     * @param string $value Value of the jwt_auth authentication method.
     *
     * @return void
     */
    public function setjwt_auth($value);

    /**
     * Operation createSection
     *
     * Create Section
     *
     * @param  \OpenAPI\Server\Model\SectionInput $sectionInput   (optional)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\SectionResponse
     */
    public function createSection(SectionInput $sectionInput = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation deleteSectionById
     *
     * Delete Section
     *
     * @param  \int $sectionId   (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ApiResponse
     */
    public function deleteSectionById(int $sectionId, &$responseCode, array &$responseHeaders);

    /**
     * Operation getListRulesBySectionId
     *
     * Get List Rules By Section ID
     *
     * @param  \int $sectionId   (required)
     * @param  \string $query   (optional)
     * @param  \string $sort   (optional)
     * @param  \int $pageSize   (optional)
     * @param  \int $page   (optional)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\ListRules
     */
    public function getListRulesBySectionId(int $sectionId, string $query = null, string $sort = null, int $pageSize = null, int $page = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation getMembersBySectionId
     *
     * List members by section
     *
     * @param  \int $sectionId   (required)
     * @param  \string $query   (optional)
     * @param  \string $sort   (optional)
     * @param  \int $pageSize   (optional)
     * @param  \int $page   (optional)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Members
     */
    public function getMembersBySectionId(int $sectionId, string $query = null, string $sort = null, int $pageSize = null, int $page = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation getSectionById
     *
     * Get Section
     *
     * @param  \int $sectionId   (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\SectionResponse
     */
    public function getSectionById(int $sectionId, &$responseCode, array &$responseHeaders);

    /**
     * Operation getSectionRolesBySectionId
     *
     * List Section Roles By Section ID
     *
     * @param  \int $sectionId   (required)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Roles
     */
    public function getSectionRolesBySectionId(int $sectionId, &$responseCode, array &$responseHeaders);

    /**
     * Operation getSections
     *
     * Get Sections
     *
     * @param  \string $query   (optional)
     * @param  \string $sort   (optional)
     * @param  \int $pageSize   (optional)
     * @param  \int $page   (optional)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\Sections
     */
    public function getSections(string $query = null, string $sort = null, int $pageSize = null, int $page = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation updateSectionById
     *
     * Update Section
     *
     * @param  \int $sectionId   (required)
     * @param  \OpenAPI\Server\Model\SectionInput $sectionInput   (optional)
     * @param  \int $responseCode     The HTTP response code to return
     * @param  \array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return \OpenAPI\Server\Model\SectionResponse
     */
    public function updateSectionById(int $sectionId, SectionInput $sectionInput = null, &$responseCode, array &$responseHeaders);
}
