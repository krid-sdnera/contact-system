# NOTE: This file is auto generated by the openapi generator program.
# https://github.com/openapitools/openapi-generator
# Do not edit the class manually.

# contacts
open_api_server_contacts_createcontact:
    path:     /contacts
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.contacts:createContactAction

open_api_server_contacts_deletecontactbyid:
    path:     /contacts/{contactId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.contacts:deleteContactByIdAction
    requirements:
        contactId: '[a-z0-9]+'

open_api_server_contacts_getcontactbyid:
    path:     /contacts/{contactId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.contacts:getContactByIdAction
    requirements:
        contactId: '[a-z0-9]+'

open_api_server_contacts_getcontactmembersbyid:
    path:     /contacts/{contactId}/members
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.contacts:getContactMembersByIdAction
    requirements:
        contactId: '[a-z0-9]+'

open_api_server_contacts_getcontacts:
    path:     /contacts
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.contacts:getContactsAction

open_api_server_contacts_updatecontactbyid:
    path:     /contacts/{contactId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.contacts:updateContactByIdAction
    requirements:
        contactId: '[a-z0-9]+'

# groups
open_api_server_groups_addgrouplocalmarkerbyid:
    path:     /groups/{groupId}/local
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.groups:addGroupLocalMarkerByIdAction
    requirements:
        groupId: '[a-z0-9]+'

open_api_server_groups_creategroup:
    path:     /groups
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.groups:createGroupAction

open_api_server_groups_deletegroupbyid:
    path:     /groups/{groupId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.groups:deleteGroupByIdAction
    requirements:
        groupId: '[a-z0-9]+'

open_api_server_groups_deletegrouplocalmarkerbyid:
    path:     /groups/{groupId}/local
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.groups:deleteGroupLocalMarkerByIdAction
    requirements:
        groupId: '[a-z0-9]+'

open_api_server_groups_getgroupbyid:
    path:     /groups/{groupId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.groups:getGroupByIdAction
    requirements:
        groupId: '[a-z0-9]+'

open_api_server_groups_getgroupmembersbyid:
    path:     /groups/{groupId}/members
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.groups:getGroupMembersByIdAction
    requirements:
        groupId: '[a-z0-9]+'

open_api_server_groups_getgroupsectionsbyid:
    path:     /groups/{groupId}/sections
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.groups:getGroupSectionsByIdAction
    requirements:
        groupId: '[a-z0-9]+'

open_api_server_groups_getgroups:
    path:     /groups
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.groups:getGroupsAction

open_api_server_groups_updategroupbyid:
    path:     /groups/{groupId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.groups:updateGroupByIdAction
    requirements:
        groupId: '[a-z0-9]+'

# lists
open_api_server_lists_createlist:
    path:     /lists
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.lists:createListAction

open_api_server_lists_createlistrulebyid:
    path:     /lists/{listId}/rules
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.lists:createListRuleByIdAction
    requirements:
        listId: '[a-z0-9]+'

open_api_server_lists_createlisttypes:
    path:     /lists/types
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.lists:createListTypesAction

open_api_server_lists_deletelistbyid:
    path:     /lists/{listId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.lists:deleteListByIdAction
    requirements:
        listId: '[a-z0-9]+'

open_api_server_lists_deletelistrulebyid:
    path:     /lists/{listId}/rules/{ruleId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.lists:deleteListRuleByIdAction
    requirements:
        listId: '[a-z0-9]+'
        ruleId: '[a-z0-9]+'

open_api_server_lists_deletelisttypebyid:
    path:     /lists/types/{listTypeId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.lists:deleteListTypeByIdAction
    requirements:
        listTypeId: '[a-z0-9]+'

open_api_server_lists_getlistbyid:
    path:     /lists/{listId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.lists:getListByIdAction
    requirements:
        listId: '[a-z0-9]+'

open_api_server_lists_getlistmembersbyid:
    path:     /lists/{listId}/members
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.lists:getListMembersByIdAction
    requirements:
        listId: '[a-z0-9]+'

open_api_server_lists_getlistrulebyid:
    path:     /lists/{listId}/rules/{ruleId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.lists:getListRuleByIdAction
    requirements:
        listId: '[a-z0-9]+'
        ruleId: '[a-z0-9]+'

open_api_server_lists_getlistrulesbyid:
    path:     /lists/{listId}/rules
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.lists:getListRulesByIdAction
    requirements:
        listId: '[a-z0-9]+'

open_api_server_lists_getlisttypebyid:
    path:     /lists/types/{listTypeId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.lists:getListTypeByIdAction
    requirements:
        listTypeId: '[a-z0-9]+'

open_api_server_lists_getlisttypes:
    path:     /lists/types
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.lists:getListTypesAction

open_api_server_lists_getlists:
    path:     /lists
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.lists:getListsAction

open_api_server_lists_updatelistbyid:
    path:     /lists/{listId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.lists:updateListByIdAction
    requirements:
        listId: '[a-z0-9]+'

open_api_server_lists_updatelistrulebyid:
    path:     /lists/{listId}/rules/{ruleId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.lists:updateListRuleByIdAction
    requirements:
        listId: '[a-z0-9]+'
        ruleId: '[a-z0-9]+'

open_api_server_lists_updatelisttypebyid:
    path:     /lists/types/{listTypeId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.lists:updateListTypeByIdAction
    requirements:
        listTypeId: '[a-z0-9]+'

# members
open_api_server_members_addmemberlocalmarkerbyid:
    path:     /members/{memberId}/local
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.members:addMemberLocalMarkerByIdAction
    requirements:
        memberId: '[a-z0-9]+'

open_api_server_members_createmember:
    path:     /members
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.members:createMemberAction

open_api_server_members_deletememberbyid:
    path:     /members/{memberId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.members:deleteMemberByIdAction
    requirements:
        memberId: '[a-z0-9]+'

open_api_server_members_getmemberbyid:
    path:     /members/{memberId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.members:getMemberByIdAction
    requirements:
        memberId: '[a-z0-9]+'

open_api_server_members_getmemberlocalmarkersuggestionsbyid:
    path:     /members/{memberId}/local/suggestions
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.members:getMemberLocalMarkerSuggestionsByIdAction
    requirements:
        memberId: '[a-z0-9]+'

open_api_server_members_getmembers:
    path:     /members
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.members:getMembersAction

open_api_server_members_mergemember:
    path:     /members/{memberId}/merge_into/{mergeMemberId}
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.members:mergeMemberAction
    requirements:
        memberId: '[a-z0-9]+'
        mergeMemberId: '[a-z0-9]+'

open_api_server_members_removememberlocalmarkerbyid:
    path:     /members/{memberId}/local
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.members:removeMemberLocalMarkerByIdAction
    requirements:
        memberId: '[a-z0-9]+'

open_api_server_members_removemembersectionbyid:
    path:     /members/{memberId}/section
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.members:removeMemberSectionByIdAction
    requirements:
        memberId: '[a-z0-9]+'

open_api_server_members_setmembergroupbyid:
    path:     /members/{memberId}/group
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.members:setMemberGroupByIdAction
    requirements:
        memberId: '[a-z0-9]+'

open_api_server_members_setmembersectionbyid:
    path:     /members/{memberId}/section
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.members:setMemberSectionByIdAction
    requirements:
        memberId: '[a-z0-9]+'

open_api_server_members_updatememberbyid:
    path:     /members/{memberId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.members:updateMemberByIdAction
    requirements:
        memberId: '[a-z0-9]+'

# roles
open_api_server_roles_createcustomrole:
    path:     /roles/custom
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.roles:createCustomRoleAction

open_api_server_roles_deletecustomrolebyid:
    path:     /roles/custom/{customRoleId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.roles:deleteCustomRoleByIdAction
    requirements:
        customRoleId: '[a-z0-9]+'

open_api_server_roles_getcustomrolebyid:
    path:     /roles/custom/{customRoleId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.roles:getCustomRoleByIdAction
    requirements:
        customRoleId: '[a-z0-9]+'

open_api_server_roles_getcustomrolemembersbyid:
    path:     /roles/custom/{customRoleId}/members
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.roles:getCustomRoleMembersByIdAction
    requirements:
        customRoleId: '[a-z0-9]+'

open_api_server_roles_getcustomroles:
    path:     /roles/custom
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.roles:getCustomRolesAction

open_api_server_roles_updatecustomrolebyid:
    path:     /roles/custom/{customRoleId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.roles:updateCustomRoleByIdAction
    requirements:
        customRoleId: '[a-z0-9]+'

# sections
open_api_server_sections_addsectionlocalmarkerbyid:
    path:     /sections/{sectionId}/local
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.sections:addSectionLocalMarkerByIdAction
    requirements:
        sectionId: '[a-z0-9]+'

open_api_server_sections_createsection:
    path:     /sections
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.sections:createSectionAction

open_api_server_sections_deletesectionbyid:
    path:     /sections/{sectionId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.sections:deleteSectionByIdAction
    requirements:
        sectionId: '[a-z0-9]+'

open_api_server_sections_getsectionbyid:
    path:     /sections/{sectionId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.sections:getSectionByIdAction
    requirements:
        sectionId: '[a-z0-9]+'

open_api_server_sections_getsectionmembersbyid:
    path:     /sections/{sectionId}/members
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.sections:getSectionMembersByIdAction
    requirements:
        sectionId: '[a-z0-9]+'

open_api_server_sections_getsections:
    path:     /sections
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.sections:getSectionsAction

open_api_server_sections_removesectionlocalmarkerbyid:
    path:     /sections/{sectionId}/local
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.sections:removeSectionLocalMarkerByIdAction
    requirements:
        sectionId: '[a-z0-9]+'

open_api_server_sections_updatesectionbyid:
    path:     /sections/{sectionId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.sections:updateSectionByIdAction
    requirements:
        sectionId: '[a-z0-9]+'

# subsidiaries
open_api_server_subsidiaries_addsubsidiarylocalmarkerbyid:
    path:     /subsidiaries/{subsidiaryId}/local
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.subsidiaries:addSubsidiaryLocalMarkerByIdAction
    requirements:
        subsidiaryId: '[a-z0-9]+'

open_api_server_subsidiaries_createsubsidiary:
    path:     /subsidiaries
    methods:  [POST]
    defaults:
        _controller: open_api_server.controller.subsidiaries:createSubsidiaryAction

open_api_server_subsidiaries_deletesubsidiarybyid:
    path:     /subsidiaries/{subsidiaryId}
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.subsidiaries:deleteSubsidiaryByIdAction
    requirements:
        subsidiaryId: '[a-z0-9]+'

open_api_server_subsidiaries_getsubsidiary:
    path:     /subsidiaries
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.subsidiaries:getSubsidiaryAction

open_api_server_subsidiaries_getsubsidiarybyid:
    path:     /subsidiaries/{subsidiaryId}
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.subsidiaries:getSubsidiaryByIdAction
    requirements:
        subsidiaryId: '[a-z0-9]+'

open_api_server_subsidiaries_getsubsidiarymembersbyid:
    path:     /subsidiaries/{subsidiaryId}/members
    methods:  [GET]
    defaults:
        _controller: open_api_server.controller.subsidiaries:getSubsidiaryMembersByIdAction
    requirements:
        subsidiaryId: '[a-z0-9]+'

open_api_server_subsidiaries_removesubsidiarylocalmarkerbyid:
    path:     /subsidiaries/{subsidiaryId}/local
    methods:  [DELETE]
    defaults:
        _controller: open_api_server.controller.subsidiaries:removeSubsidiaryLocalMarkerByIdAction
    requirements:
        subsidiaryId: '[a-z0-9]+'

open_api_server_subsidiaries_updatesubsidiarybyid:
    path:     /subsidiaries/{subsidiaryId}
    methods:  [PUT]
    defaults:
        _controller: open_api_server.controller.subsidiaries:updateSubsidiaryByIdAction
    requirements:
        subsidiaryId: '[a-z0-9]+'

